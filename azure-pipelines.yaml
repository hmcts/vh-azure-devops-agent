trigger:
  - master
pr:
  - none

#resources:
  # repositories:
  #   - repository: templates
  #     type: github
  #     name: hmcts/azure-devops-templates
  #     ref: refs/heads/master
  #     endpoint: hmcts

parameters:
  - name: environment
    displayName: Environment (sandbox default)
    type: string
    default: sandbox # USE upper and lower
    values:
      - sandbox
      - upper
      - lower

variables:
  - group: vh-azure-devops-agent
  - name: TF_VAR_RG_NAME
    value: "vh-devops-agent-rg-${{ parameters.environment }}"

stages:
  
  - stage: Deploy_Agent
    displayName: Deploy_Agent
    jobs:
      - job: Deploy_Terraform
        displayName: Deploy Terraform
        pool:
          vmImage: 'ubuntu-latest'
        
        steps:
              
          - template: pipeline-steps/terraform-prep.yaml
            parameters:
              terraformVersion: $(tfVersion)
              subscription: $(subscription)
              environment: ${{ parameters.environment }}
              resourceGroup: $(resourceGroup)
              location: $(location)
              storageAccount: $(storageAccount)
              containerName: $(containerName)
              stateKey: $(stateKey)-${{ parameters.environment }}.tfstate
              workingDirectory: $(System.DefaultWorkingDirectory)/$(tfDirectory)
          - template: pipeline-steps/terraform-plan.yaml
            parameters:
              subscription: $(subscription)
              environment: ${{ parameters.environment }}
              tfVariables: $(System.DefaultWorkingDirectory)/$(tfDirectory)/$(tfVariables)
              workingDirectory: $(System.DefaultWorkingDirectory)/$(tfDirectory)

          - template: pipeline-steps/terraform-apply.yaml
            parameters:
              subscription: $(subscription)
              environment: ${{ parameters.environment }}
              planLocation: $(System.DefaultWorkingDirectory)/$(tfDirectory)/${{ parameters.environment }}.tfplan
              # outputName: ${{ parameters.environment }}
              workingDirectory: $(System.DefaultWorkingDirectory)/$(tfDirectory)