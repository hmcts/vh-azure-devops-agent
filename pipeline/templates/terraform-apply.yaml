parameters:
  - name: subscription
    type: string
  - name: workingDirectory
    type: string
  - name: planLocation
    type: string

steps:
- task: TerraformCLI@0
  name : terraformApply
  displayName: Terraform Apply
  inputs:
    workingDirectory: ${{ parameters.workingDirectory }}
    command: apply
    environmentServiceName: ${{ parameters.subscription }}
    commandOptions: -input=false -auto-approve "${{ parameters.planLocation }}"

- powershell: |
    $terraformOutputs = terraform output -json | ConvertFrom-Json
    $terraformOutput | Get-Member -MemberType NoteProperty | % { 
      Write-Output $($_.Name)
      Write-Output $($o.value)
      $o = $terraformOutput.($_.Name); Write-Host "##vso[task.setvariable variable=$($_.Name);isoutput=true;issecret=$($o.sensitive)]$($o.value)" 
    }

    Write-Output $outputName
    Write-Output $values
  name: terraformOutput
  displayName: Read terraform outputs
  workingDirectory: ${{ parameters.workingDirectory }}
