parameters:
  - name: subscription
    type: string
  - name: workingDirectory
    type: string
  - name: planLocation
    type: string

steps:
- task: TerraformCLI@0
  name : terraformApply
  displayName: Terraform Apply
  inputs:
    workingDirectory: ${{ parameters.workingDirectory }}
    command: apply
    environmentServiceName: ${{ parameters.subscription }}
    commandOptions: -input=false -auto-approve "${{ parameters.planLocation }}"

- powershell: |
    $terraformOutput = terraform output -json | ConvertFrom-Json
    Write-Host $terraformOutput
    $terraformOutput | Get-Member -MemberType NoteProperty | % { 
        $o = $terraformOutput.($_.Name)
        $data = $($o.value)
        if($o.type -eq "tuple System.Object[]") {
            Write-Host "Join"
            $data = $($o.value) -join ","
        } 
        Write-Host "##vso[task.setvariable variable=$($_.Name);isoutput=true;issecret=$($o.sensitive)]$data" 
        Write-Host "Name: $($_.Name) Type: $($o.type) Value: $data"
    }
  name: terraformOutput
  displayName: Read terraform outputs
  workingDirectory: ${{ parameters.workingDirectory }}
